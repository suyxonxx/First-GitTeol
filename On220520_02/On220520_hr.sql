SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;

/*카티션 곱(Cartesian Product) : 모든 행에 대해서 JOIN*/
SELECT * FROM EMPLOYEES, DEPARTMENTS;

/*동등조인 : 조인하는 테이블에서 조인 조건이 일치하는 것만 조회 >> 내부조인*/
SELECT *
FROM JOBS, JOB_HISTORY
WHERE JOBS.JOB_ID = JOB_HISTORY.JOB_ID;

/*  아래 예시의 경우, SELECT 문에서 COUNTRY_ID를 그대로 갖다 쓰면 안됨.
    C.COUNTRY_ID 및 L.COUNTRY_ID과 같이 지정한 후에 사용해야 함.*/
SELECT REGION_ID, LOCATION_ID, C.COUNTRY_ID
FROM COUNTRIES C, LOCATIONS L
WHERE C.COUNTRY_ID = L.COUNTRY_ID;

SELECT *
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT E.LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT * FROM EMPLOYEES;
SELECT * FROM JOBS;

SELECT E.SALARY, MIN_SALARY, MAX_SALARY
FROM EMPLOYEES E, JOBS J
WHERE E.SALARY BETWEEN J.MIN_SALARY AND J.MAX_SALARY;

SELECT E.FIRST_NAME, E.HIRE_DATE, J.START_DATE, J.END_DATE
FROM EMPLOYEES E, JOB_HISTORY J
WHERE E.HIRE_DATE BETWEEN J.START_DATE AND J.END_DATE;

SELECT COUNT(FIRST_NAME)
FROM EMPLOYEES
WHERE HIRE_DATE BETWEEN '2007-01-01' AND '2007-12-31';

SELECT FIRST_NAME, HIRE_DATE
FROM EMPLOYEES;

SELECT START_DATE, END_DATE
FROM JOB_HISTORY;

/*  외부 조인 : 조인하는 테이블에서 조인 조건을 만족하지 않는 행도 출력.
    동등 조인 조건을 만족하지 못한 채 누락된 행을 출력할 때 사용함.*/

SELECT *
FROM JOBS J, JOB_HISTORY H
WHERE J.JOB_ID = H.JOB_ID;

SELECT *
FROM JOBS J, JOB_HISTORY H
WHERE J.JOB_ID = H.JOB_ID(+);

SELECT *
FROM JOBS J, JOB_HISTORY H
WHERE J.JOB_ID(+) = H.JOB_ID;

SELECT *
FROM COUNTRIES C, LOCATIONS L
WHERE C.COUNTRY_ID = L.COUNTRY_ID(+);

SELECT A.FIRST_NAME, A.LAST_NAME, B.FIRST_NAME, B.LAST_NAME
FROM EMPLOYEES A, EMPLOYEES B
WHERE A.MANAGER_ID = B.EMPLOYEE_ID;

SELECT * FROM EMPLOYEES;

SELECT * FROM EMPLOYEES ORDER BY MANAGER_ID;

SELECT A.FIRST_NAME, A.LAST_NAME, B.FIRST_NAME, B.LAST_NAME
FROM EMPLOYEES A, EMPLOYEES B
WHERE A.MANAGER_ID = B.EMPLOYEE_ID;

/*  COUNTRIES 테이블과 LOCATIONS 테이블을 COUNTRY_ID를 기준으로 조인하여
    COUNTRY_NAME, STATE_PROVINCE, STREET_ADDRESS를 조회*/
SELECT C.COUNTRY_NAME, L.STATE_PROVINCE, L.STREET_ADDRESS
FROM COUNTRIES C, LOCATIONS L
WHERE C.COUNTRY_ID = L.COUNTRY_ID;

/*  JOBS 테이블과 JOB_HISTORY 테이블을 JOB_ID를 기준으로 조인하여
    JOB_ID, JOB_TITLE, START_DATE, END_DATE를 조회*/
SELECT J.JOB_ID, J.JOB_TITLE, H.START_DATE, H.END_DATE
FROM JOBS J, JOB_HISTORY H
WHERE J.JOB_ID = H.JOB_ID;

/*  EMPLOYEE 테이블과 DEPARTMENTS 테이블을 DEPARTMENT_ID 기준으로 조인하고,
    EMPLOYEES 테이블과 JOBS 테이블을 JOB_ID 기준으로 조인하여 FIRST_NAME,
    LAST_NAME, DEPARTMENT_NAME, JOB_TITLE을 조회*/
SELECT E.FIRST_NAME, E.LAST_NAME, D.DEPARTMENT_NAME, J.JOB_TITLE
FROM EMPLOYEES E, DEPARTMENTS D, JOBS J
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID AND E.JOB_ID = J.JOB_ID;

/*  COUNTRIES 테이블과 LOCATIONS 테이블을 LOCATIONS의 COUNTRY_ID를 기준으로
    외부 조인하여 COUNTRY_ID, COUNTRY_NAME, CITY를 조회*/
SELECT C.COUNTRY_ID, C.COUNTRY_NAME, L.CITY
FROM COUNTRIES C, LOCATIONS L
WHERE L.COUNTRY_ID(+) = C.COUNTRY_ID;
