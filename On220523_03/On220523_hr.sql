/*  COUNTRIES 테이블과 LOCATIONS 테이블을 LOCATIONS의 COUNTRY_ID를 기준으로
    외부 조인하여 COUNTRY_ID, COUNTRY_NAME, CITY를 조회  */
SELECT C.COUNTRY_ID, C.COUNTRY_NAME, L.CITY
FROM COUNTRIES C, LOCATIONS L
WHERE L.COUNTRY_ID(+) = C.COUNTRY_ID;

DESC COUNTRIES;
DESC LOCATIONS;

SELECT COUNTRY_ID FROM COUNTRIES ORDER BY COUNTRY_ID;
SELECT COUNTRY_ID FROM LOCATIONS ORDER BY COUNTRY_ID;

/*  EMPLOYEES 테이블과 DEPARTMENTS 테이블을 DEPARTMENTS 테이블의 DEPARTMENT_ID를
    기준으로 외부 조인하여 EMPLOYEE_ID, FIRST_NAME, LAST_NAME, DEPARTMENT_NAME을
    EMPLOYEE_ID를 기준으로 정렬하여 조회   */
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID(+)
ORDER BY E.EMPLOYEE_ID;

DESC EMPLOYEES;
DESC DEPARTMENTS;

/*  EMPLOYEES 테이블을 MANAGER_ID와 EMPLOYEE_ID를 기준으로 자체 조인한 뒤에 직원의
    FIRST_NAME과 LAST_NAME을 결합하고 관리자의 FIRST_NAME과 LAST_NAME을 결합하여
        EMPLOYEE_ID를 기준으로 정렬하여 조회   */
SELECT EE.EMPLOYEE_ID AS EE_EMPLOYEE_ID,
        CONCAT(EE.FIRST_NAME, CONCAT(' ', EE.LAST_NAME)) AS EE_FULL_NAME,
        EM.EMPLOYEE_ID AS EM_EMPLOYEE_ID,
        CONCAT(EM.FIRST_NAME, CONCAT(' ', EM.LAST_NAME)) AS EM_FULL_NAME
FROM EMPLOYEES EE, EMPLOYEES EM
WHERE EE.EMPLOYEE_ID = EM.MANAGER_ID
ORDER BY EE.EMPLOYEE_ID;

--CONCAT을 사용하는 대신에, 아래와 같이 간단하게 문자열을 이어붙이는 방법도 있음.
SELECT EE.EMPLOYEE_ID AS EE_EMPLOYEE_ID,
        EE.FIRST_NAME || ' ' || EE.LAST_NAME AS EE_FULL_NAME,
        EM.EMPLOYEE_ID AS EM_EMPLOYEE_ID,
        EM.FIRST_NAME || ' ' || EM.LAST_NAME AS EM_FULL_NAME
FROM EMPLOYEES EE, EMPLOYEES EM
WHERE EE.EMPLOYEE_ID = EM.MANAGER_ID
ORDER BY EE.EMPLOYEE_ID;

/*  <서브 쿼리>
    SQL문을 실행하는 데 필요한 데이터를 추가로 조회하기 위해
    SQL문 내부에서 사용하는 SELECT문을 의미.
*/
--  이거랑
SELECT *
FROM EMPLOYEES
WHERE PHONE_NUMBER = '515.123.4567';
--  이거랑
SELECT PHONE_NUMBER
FROM EMPLOYEES
WHERE EMPLOYEE_ID = 100;
--  짬뽕시키기!
SELECT *
FROM EMPLOYEES
WHERE PHONE_NUMBER = (
SELECT PHONE_NUMBER
FROM EMPLOYEES
WHERE EMPLOYEE_ID = 100
);
/*  참고로 바깥쪽(서브쿼리의 결과 값을 사용하여 기능을 수행하는 영역)이 메인쿼리,
    안쪽이 서브쿼리가 됨.    */

--단일행 서브쿼리 예제1
SELECT *
FROM EMPLOYEES
WHERE HIRE_DATE = '03/06/17';

SELECT HIRE_DATE
FROM EMPLOYEES
WHERE EMAIL = 'SKING';

SELECT *
FROM EMPLOYEES
WHERE HIRE_DATE = (
SELECT HIRE_DATE
FROM EMPLOYEES
WHERE EMAIL = 'SKING'
);
/*  위에서, 꼭 '= ();'의 형식으로 들어갈 필요가 없음. 해당 부분의 '=' 자리에
    원하는 조건 또는 조건들을 뽑아내기 위한 다른 조건연산자들도 사용할 수 있음. */
--예시
SELECT *
FROM EMPLOYEES
WHERE HIRE_DATE <= (
SELECT HIRE_DATE
FROM EMPLOYEES
WHERE EMAIL = 'SKING'
);

--단일행 서브쿼리 예제2
SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY < (
SELECT SALARY
FROM EMPLOYEES
WHERE EMPLOYEE_ID = 100
);

--단일행 서브쿼리 예제3
SELECT *
FROM EMPLOYEES
WHERE HIRE_DATE = '06/01/03' AND SALARY = (
SELECT SALARY
FROM EMPLOYEES
WHERE HIRE_DATE = '06/01/03'
);
